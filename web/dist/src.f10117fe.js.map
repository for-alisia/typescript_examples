{"version":3,"sources":["src/models/User.ts","src/index.ts"],"names":[],"mappings":";;;;;;ACAA,IAAA,MAAA,GAAA,OAAA,CAAA,eAAA,CAAA;ADOA,IAAA,IAAA;ACLA,ADKA,ICLM,IAAI,GAAG,IAAI,MAAA,CAAA,IAAJ,CAAS;AAAE,ADKxB,ECLwB,IAAI,EAAE,IDK9B,ECLsB;AAAgB,ADQpC,ECRoC,GAAG,EAAE,IDQzC,IAAA,CAAoB,IAApB,EAAmC;ACRf,ADQA,CCRT,CAAb,ODQsB,IAAA,GAAA,IAAA;ACNtB,ADIE,ICJE,CAAC,GAAL,CAAS,ADIP,MAAA,GAAwC,EAAxC;ACJS,ADM8B,ECN9B,IAAI,EAAE;AAAR,CAAT;AAEA,ADME,EAAA,ECNE,CAAC,CDMH,CCNF,ADME,CCNM,QAAR,ADME,CAAA,CCNgB,EDMhB,GAAA,OCNgB,GDMZ,QAAJ,EAAoB;ACLpB,ADME,ECNF,OAAO,CAAC,CDMC,ECNT,CAAY,EDME,IAAL,CAAU,ICNnB,IDMS,CAAP;ACLH,ADME,CCRH,EDME;ACFF,IAAI,CAAC,EAAL,CAAQ,QAAR,EAAkB,YAAA;AAChB,ADKA,ECLA,ADKA,IAAA,CAAA,ECLO,CAAC,GAAR,CAAY,EDKZ,CAAA,GAAA,GAAA,ECLA,QDKI,MAAJ,EAAqB;ACJtB,ADKG,CCPJ,GDOI,MAAM,CAAC,MAAP,CAAc,KAAK,IAAnB,EAAyB,MAAzB;ACHJ,ADIG,GAFD,CCFE,CAAC,EAAL,CAAQ,MAAR,EAAgB,YAAA;AACd,EAAA,OAAO,CAAC,GAAR,CAAY,eAAZ;AACD,ADIC,CCNF,CDME,IAAA,CAAA,SAAA,CAAA,EAAA,GAAA,UAAG,SAAH,EAAsB,QAAtB,EAAwC;ACF1C,ADGI,ICHA,CAAC,GDGK,ICHV,CAAa,GDGK,GAAG,KAAK,GCH1B,GDGqB,CAAY,SAAZ,KAA0B,EAA3C;ACFJ,ADGI,ICHA,ADGA,CCHC,OAAL,ADGY,CCHC,ADGA,IAAT,CAAc,GCHlB,KDGI;ACFJ,ADGI,ICHA,CAAC,IDGI,GCHT,CAAa,EDGT,CAAY,GCHhB,MDGI,IAAyB,QAAzB;AACD,GAJD;;AAMA,EAAA,IAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,SAAR,EAAyB;AACvB,QAAM,QAAQ,GAAG,KAAK,MAAL,CAAY,SAAZ,CAAjB;;AAEA,QAAI,CAAC,QAAD,IAAa,QAAQ,CAAC,MAAT,KAAoB,CAArC,EAAwC;AACtC;AACD;;AAED,IAAA,QAAQ,CAAC,OAAT,CAAiB,UAAA,QAAA,EAAQ;AACvB,MAAA,QAAQ;AACT,KAFD;AAGD,GAVD;;AAWF,SAAA,IAAA;AA9BA,CAAA,EAAA;;AAAa,OAAA,CAAA,IAAA,GAAA,IAAA","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["interface UserProps {\n  name?: string;\n  age?: number;\n}\n\ntype Callback = () => void;\n\nexport class User {\n  events: { [key: string]: Callback[] } = {};\n\n  constructor(private data: UserProps) {}\n\n  get(propName: string): string | number {\n    return this.data[propName];\n  }\n\n  set(update: UserProps): void {\n    Object.assign(this.data, update);\n  }\n\n  on(eventName: string, callback: Callback): void {\n    const handlers = this.events[eventName] || [];\n    handlers.push(callback);\n    this.events[eventName] = handlers;\n  }\n\n  trigger(eventName: string): void {\n    const handlers = this.events[eventName];\n\n    if (!handlers || handlers.length === 0) {\n      return;\n    }\n\n    handlers.forEach(callback => {\n      callback();\n    });\n  }\n}\n","import { User } from './models/User';\n\nconst user = new User({ name: 'Alex', age: 8 });\n\nuser.set({ name: 'Alice' });\n\nuser.on('change', () => {\n  console.log('Change #1');\n});\n\nuser.on('change', () => {\n  console.log('change #2');\n});\n\nuser.on('save', () => {\n  console.log('save event!!!');\n});\n\nuser.trigger('noExistEvent');\nuser.trigger('change');\nuser.trigger('save');\n"]}